<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.worksystem.mapper.SubjectMapper">
  <resultMap id="BaseResultMap" type="com.worksystem.entity.Subject">
    <id column="sjid" property="sjid" jdbcType="INTEGER"/>
    <result column="sjname" property="sjname" jdbcType="VARCHAR"/>
    <result column="sjtname" property="sjtname" jdbcType="VARCHAR"/>
    <result column="sjtid" property="sjtid" jdbcType="INTEGER"/>
    <result column="sjgid" property="sjgid" jdbcType="INTEGER"/>
    <result column="sjsemester" property="sjsemester" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sjid, sjname, sjtname, sjtid, sjgid, sjsemester
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.worksystem.entity.SubjectExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from subject
    where sjid = #{sjid,jdbcType=INTEGER}
  </select>
  <select id="selectSubjectAndGrade" resultType="java.util.Map">
    select
    <include refid="Base_Column_List"/>,
    grade.gname
    from subject
    inner join grade
    on sjgid=gid
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from subject
    where sjid = #{sjid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.worksystem.entity.SubjectExample">
    delete from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.worksystem.entity.Subject">
    insert into subject (sjid, sjname, sjtname,
      sjtid, sjgid, sjsemester
      )
    values (#{sjid,jdbcType=INTEGER}, #{sjname,jdbcType=VARCHAR}, #{sjtname,jdbcType=VARCHAR},
      #{sjtid,jdbcType=INTEGER}, #{sjgid,jdbcType=INTEGER}, #{sjsemester,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.worksystem.entity.Subject">
    insert into subject
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sjid != null">
        sjid,
      </if>
      <if test="sjname != null">
        sjname,
      </if>
      <if test="sjtname != null">
        sjtname,
      </if>
      <if test="sjtid != null">
        sjtid,
      </if>
      <if test="sjgid != null">
        sjgid,
      </if>
      <if test="sjsemester != null">
        sjsemester,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sjid != null">
        #{sjid,jdbcType=INTEGER},
      </if>
      <if test="sjname != null">
        #{sjname,jdbcType=VARCHAR},
      </if>
      <if test="sjtname != null">
        #{sjtname,jdbcType=VARCHAR},
      </if>
      <if test="sjtid != null">
        #{sjtid,jdbcType=INTEGER},
      </if>
      <if test="sjgid != null">
        #{sjgid,jdbcType=INTEGER},
      </if>
      <if test="sjsemester != null">
        #{sjsemester,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.worksystem.entity.SubjectExample" resultType="java.lang.Integer">
    select count(*) from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update subject
    <set>
      <if test="record.sjid != null">
        sjid = #{record.sjid,jdbcType=INTEGER},
      </if>
      <if test="record.sjname != null">
        sjname = #{record.sjname,jdbcType=VARCHAR},
      </if>
      <if test="record.sjtname != null">
        sjtname = #{record.sjtname,jdbcType=VARCHAR},
      </if>
      <if test="record.sjtid != null">
        sjtid = #{record.sjtid,jdbcType=INTEGER},
      </if>
      <if test="record.sjgid != null">
        sjgid = #{record.sjgid,jdbcType=INTEGER},
      </if>
      <if test="record.sjsemester != null">
        sjsemester = #{record.sjsemester,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update subject
    set sjid = #{record.sjid,jdbcType=INTEGER},
    sjname = #{record.sjname,jdbcType=VARCHAR},
    sjtname = #{record.sjtname,jdbcType=VARCHAR},
    sjtid = #{record.sjtid,jdbcType=INTEGER},
    sjgid = #{record.sjgid,jdbcType=INTEGER},
    sjsemester = #{record.sjsemester,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.worksystem.entity.Subject">
    update subject
    <set>
      <if test="sjname != null">
        sjname = #{sjname,jdbcType=VARCHAR},
      </if>
      <if test="sjtname != null">
        sjtname = #{sjtname,jdbcType=VARCHAR},
      </if>
      <if test="sjtid != null">
        sjtid = #{sjtid,jdbcType=INTEGER},
      </if>
      <if test="sjgid != null">
        sjgid = #{sjgid,jdbcType=INTEGER},
      </if>
      <if test="sjsemester != null">
        sjsemester = #{sjsemester,jdbcType=INTEGER},
      </if>
    </set>
    where sjid = #{sjid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.worksystem.entity.Subject">
    update subject
    set sjname = #{sjname,jdbcType=VARCHAR},
      sjtname = #{sjtname,jdbcType=VARCHAR},
      sjtid = #{sjtid,jdbcType=INTEGER},
      sjgid = #{sjgid,jdbcType=INTEGER},
      sjsemester = #{sjsemester,jdbcType=INTEGER}
    where sjid = #{sjid,jdbcType=INTEGER}
  </update>
</mapper>